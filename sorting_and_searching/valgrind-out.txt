==46480== Memcheck, a memory error detector
==46480== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==46480== Using Valgrind-3.18.1-42b08ed5bd-20211015 and LibVEX; rerun with -h for copyright info
==46480== Command: ./a.out
==46480== Parent PID: 31522
==46480== 
--46480-- 
--46480-- Valgrind options:
--46480--    --leak-check=full
--46480--    --show-leak-kinds=all
--46480--    --track-origins=yes
--46480--    --verbose
--46480--    --log-file=valgrind-out.txt
--46480-- Contents of /proc/version:
--46480--   Linux version 5.15.146.1-microsoft-standard-WSL2 (root@65c757a075e2) (gcc (GCC) 11.2.0, GNU ld (GNU Binutils) 2.37) #1 SMP Thu Jan 11 04:09:03 UTC 2024
--46480-- 
--46480-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand-rdseed
--46480-- Page sizes: currently 4096, max supported 4096
--46480-- Valgrind library directory: /usr/libexec/valgrind
--46480-- Reading syms from /home/yli/repos/computer_science/CSES/sorting_and_searching/a.out
--46480-- Reading syms from /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
--46480--   Considering /usr/lib/debug/.build-id/15/921ea631d9f36502d20459c43e5c85b7d6ab76.debug ..
--46480--   .. build-id is valid
--46480-- Reading syms from /usr/libexec/valgrind/memcheck-amd64-linux
--46480--    object doesn't have a symbol table
--46480--    object doesn't have a dynamic symbol table
--46480-- Scheduler: using generic scheduler lock implementation.
--46480-- Reading suppressions file: /usr/libexec/valgrind/default.supp
==46480== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-46480-by-yli-on-???
==46480== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-46480-by-yli-on-???
==46480== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-46480-by-yli-on-???
==46480== 
==46480== TO CONTROL THIS PROCESS USING vgdb (which you probably
==46480== don't want to do, unless you know exactly what you're doing,
==46480== or are doing some strange experiment):
==46480==   /usr/bin/vgdb --pid=46480 ...command...
==46480== 
==46480== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==46480==   /path/to/gdb ./a.out
==46480== and then give GDB the following command
==46480==   target remote | /usr/bin/vgdb --pid=46480
==46480== --pid is optional if only one valgrind process is running
==46480== 
--46480-- REDIR: 0x402aa40 (ld-linux-x86-64.so.2:strlen) redirected to 0x580bcec2 (???)
--46480-- REDIR: 0x402a810 (ld-linux-x86-64.so.2:index) redirected to 0x580bcedc (???)
--46480-- Reading syms from /usr/libexec/valgrind/vgpreload_core-amd64-linux.so
--46480--    object doesn't have a symbol table
--46480-- Reading syms from /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so
--46480--    object doesn't have a symbol table
==46480== WARNING: new redirection conflicts with existing -- ignoring it
--46480--     old: 0x0402aa40 (strlen              ) R-> (0000.0) 0x580bcec2 ???
--46480--     new: 0x0402aa40 (strlen              ) R-> (2007.0) 0x0484ee30 strlen
--46480-- REDIR: 0x4027220 (ld-linux-x86-64.so.2:strcmp) redirected to 0x484fcd0 (strcmp)
--46480-- REDIR: 0x402afa0 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4853840 (mempcpy)
--46480-- Reading syms from /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30
--46480--    object doesn't have a symbol table
--46480-- Reading syms from /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
--46480--    object doesn't have a symbol table
--46480-- Reading syms from /usr/lib/x86_64-linux-gnu/libc.so.6
--46480--   Considering /usr/lib/debug/.build-id/c2/89da5071a3399de893d2af81d6a30c62646e1e.debug ..
--46480--   .. build-id is valid
==46480== WARNING: new redirection conflicts with existing -- ignoring it
--46480--     old: 0x04b55c60 (memalign            ) R-> (1011.0) 0x0484e080 memalign
--46480--     new: 0x04b55c60 (memalign            ) R-> (1017.0) 0x0484e050 aligned_alloc
==46480== WARNING: new redirection conflicts with existing -- ignoring it
--46480--     old: 0x04b55c60 (memalign            ) R-> (1011.0) 0x0484e080 memalign
--46480--     new: 0x04b55c60 (memalign            ) R-> (1017.0) 0x0484e020 aligned_alloc
==46480== WARNING: new redirection conflicts with existing -- ignoring it
--46480--     old: 0x04b55c60 (memalign            ) R-> (1011.0) 0x0484e080 memalign
--46480--     new: 0x04b55c60 (memalign            ) R-> (1017.0) 0x0484e050 aligned_alloc
==46480== WARNING: new redirection conflicts with existing -- ignoring it
--46480--     old: 0x04b55c60 (memalign            ) R-> (1011.0) 0x0484e080 memalign
--46480--     new: 0x04b55c60 (memalign            ) R-> (1017.0) 0x0484e020 aligned_alloc
--46480-- Reading syms from /usr/lib/x86_64-linux-gnu/libm.so.6
--46480--   Considering /usr/lib/debug/.build-id/a8/8ef0199bd5e742ebd0c359edf5cb2be0ec08b5.debug ..
--46480--   .. build-id is valid
--46480-- REDIR: 0x4b58720 (libc.so.6:strnlen) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b589e0 (libc.so.6:strpbrk) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b582e0 (libc.so.6:strcmp) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b76cd0 (libc.so.6:wcsnlen) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b596d0 (libc.so.6:memset) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b75540 (libc.so.6:wcslen) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b59c10 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b75370 (libc.so.6:wcschr) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b58260 (libc.so.6:index) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b58960 (libc.so.6:rindex) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b595a0 (libc.so.6:memmove) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
==46480== Preferring higher priority redirection:
--46480--     old: 0x04c507c0 (__memcpy_avx_unalign) R-> (2018.0) 0x04850f90 __memcpy_avx_unaligned_erms
--46480--     new: 0x04c507c0 (__memcpy_avx_unalign) R-> (2018.1) 0x04852880 memmove
--46480-- REDIR: 0x4b753f0 (libc.so.6:wcscmp) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b599e0 (libc.so.6:stpncpy) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b759b0 (libc.so.6:wmemchr) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b58830 (libc.so.6:strncmp) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b59a70 (libc.so.6:strcasecmp) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b58420 (libc.so.6:strcspn) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b75470 (libc.so.6:wcscpy) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b581d0 (libc.so.6:strcat) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b59b60 (libc.so.6:strncasecmp_l) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b59480 (libc.so.6:bcmp) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b61570 (libc.so.6:memrchr) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b5b010 (libc.so.6:strchrnul) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b58390 (libc.so.6:strcpy) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b59b10 (libc.so.6:strcasecmp_l) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b586a0 (libc.so.6:strlen) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b588d0 (libc.so.6:strncpy) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b59950 (libc.so.6:stpcpy) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b593f0 (libc.so.6:memchr) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b58b00 (libc.so.6:strspn) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b597d0 (libc.so.6:mempcpy) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b59ac0 (libc.so.6:strncasecmp) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4b5af80 (libc.so.6:rawmemchr) redirected to 0x483f220 (_vgnU_ifunc_wrapper)
--46480-- REDIR: 0x4c4d610 (libc.so.6:__strrchr_avx2) redirected to 0x484e810 (rindex)
--46480-- REDIR: 0x4b550a0 (libc.so.6:malloc) redirected to 0x4848820 (malloc)
--46480-- REDIR: 0x4c4d7e0 (libc.so.6:__strlen_avx2) redirected to 0x484ed10 (strlen)
--46480-- REDIR: 0x4c49a80 (libc.so.6:__memcmp_avx2_movbe) redirected to 0x4852010 (bcmp)
--46480-- REDIR: 0x4912970 (libstdc++.so.6:operator new(unsigned long)) redirected to 0x4848fa0 (operator new(unsigned long))
--46480-- REDIR: 0x4c507c0 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x4852880 (memmove)
--46480-- REDIR: 0x4910c20 (libstdc++.so.6:operator delete(void*, unsigned long)) redirected to 0x484bb00 (operator delete(void*, unsigned long))
==46480== Invalid read of size 4
==46480==    at 0x109410: main (in /home/yli/repos/computer_science/CSES/sorting_and_searching/a.out)
==46480==  Address 0x404dd71ac is not stack'd, malloc'd or (recently) free'd
==46480== 
==46480== 
==46480== Process terminating with default action of signal 11 (SIGSEGV)
==46480==  Access not within mapped region at address 0x404DD71AC
==46480==    at 0x109410: main (in /home/yli/repos/computer_science/CSES/sorting_and_searching/a.out)
==46480==  If you believe this happened as a result of a stack
==46480==  overflow in your program's main thread (unlikely but
==46480==  possible), you can try to increase the size of the
==46480==  main thread stack using the --main-stacksize= flag.
==46480==  The main thread stack size used in this run was 8388608.
==46480== 
==46480== HEAP SUMMARY:
==46480==     in use at exit: 74,800 bytes in 5 blocks
==46480==   total heap usage: 10 allocs, 5 frees, 74,840 bytes allocated
==46480== 
==46480== Searching for pointers to 5 not-freed blocks
==46480== Checked 147,368 bytes
==46480== 
==46480== 16 bytes in 1 blocks are still reachable in loss record 1 of 5
==46480==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==46480==    by 0x10A561: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (in /home/yli/repos/computer_science/CSES/sorting_and_searching/a.out)
==46480==    by 0x10A10F: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (in /home/yli/repos/computer_science/CSES/sorting_and_searching/a.out)
==46480==    by 0x109E9B: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (in /home/yli/repos/computer_science/CSES/sorting_and_searching/a.out)
==46480==    by 0x109AC2: void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) (in /home/yli/repos/computer_science/CSES/sorting_and_searching/a.out)
==46480==    by 0x1097F7: std::vector<int, std::allocator<int> >::push_back(int const&) (in /home/yli/repos/computer_science/CSES/sorting_and_searching/a.out)
==46480==    by 0x109394: main (in /home/yli/repos/computer_science/CSES/sorting_and_searching/a.out)
==46480== 
==46480== 32 bytes in 1 blocks are still reachable in loss record 2 of 5
==46480==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==46480==    by 0x10A561: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (in /home/yli/repos/computer_science/CSES/sorting_and_searching/a.out)
==46480==    by 0x10A10F: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (in /home/yli/repos/computer_science/CSES/sorting_and_searching/a.out)
==46480==    by 0x109E9B: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (in /home/yli/repos/computer_science/CSES/sorting_and_searching/a.out)
==46480==    by 0x109AC2: void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) (in /home/yli/repos/computer_science/CSES/sorting_and_searching/a.out)
==46480==    by 0x1097F7: std::vector<int, std::allocator<int> >::push_back(int const&) (in /home/yli/repos/computer_science/CSES/sorting_and_searching/a.out)
==46480==    by 0x109356: main (in /home/yli/repos/computer_science/CSES/sorting_and_searching/a.out)
==46480== 
==46480== 1,024 bytes in 1 blocks are still reachable in loss record 3 of 5
==46480==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==46480==    by 0x4B2EBA3: _IO_file_doallocate (filedoalloc.c:101)
==46480==    by 0x4B3DCDF: _IO_doallocbuf (genops.c:347)
==46480==    by 0x4B3CCDB: _IO_file_underflow@@GLIBC_2.2.5 (fileops.c:485)
==46480==    by 0x4B3DD95: _IO_default_uflow (genops.c:362)
==46480==    by 0x49768C0: __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::underflow() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==46480==    by 0x49849D5: std::istream::sentry::sentry(std::istream&, bool) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==46480==    by 0x4984C31: std::istream::operator>>(int&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==46480==    by 0x109312: main (in /home/yli/repos/computer_science/CSES/sorting_and_searching/a.out)
==46480== 
==46480== 1,024 bytes in 1 blocks are still reachable in loss record 4 of 5
==46480==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==46480==    by 0x4B2EBA3: _IO_file_doallocate (filedoalloc.c:101)
==46480==    by 0x4B3DCDF: _IO_doallocbuf (genops.c:347)
==46480==    by 0x4B3CF5F: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:744)
==46480==    by 0x4B3B6D4: _IO_new_file_xsputn (fileops.c:1243)
==46480==    by 0x4B3B6D4: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1196)
==46480==    by 0x4B2FFD6: fwrite (iofwrite.c:39)
==46480==    by 0x4992AF7: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==46480==    by 0x49A1119: std::ostream& std::ostream::_M_insert<long>(long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==46480==    by 0x109477: main (in /home/yli/repos/computer_science/CSES/sorting_and_searching/a.out)
==46480== 
==46480== 72,704 bytes in 1 blocks are still reachable in loss record 5 of 5
==46480==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==46480==    by 0x490E939: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==46480==    by 0x400647D: call_init.part.0 (dl-init.c:70)
==46480==    by 0x4006567: call_init (dl-init.c:33)
==46480==    by 0x4006567: _dl_init (dl-init.c:117)
==46480==    by 0x40202C9: ??? (in /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2)
==46480== 
==46480== LEAK SUMMARY:
==46480==    definitely lost: 0 bytes in 0 blocks
==46480==    indirectly lost: 0 bytes in 0 blocks
==46480==      possibly lost: 0 bytes in 0 blocks
==46480==    still reachable: 74,800 bytes in 5 blocks
==46480==         suppressed: 0 bytes in 0 blocks
==46480== 
==46480== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==46480== 
==46480== 1 errors in context 1 of 1:
==46480== Invalid read of size 4
==46480==    at 0x109410: main (in /home/yli/repos/computer_science/CSES/sorting_and_searching/a.out)
==46480==  Address 0x404dd71ac is not stack'd, malloc'd or (recently) free'd
==46480== 
==46480== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
